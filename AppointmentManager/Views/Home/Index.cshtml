@model AppointmentManager.Models.ViewModels.CalendarViewModel
@{
    ViewData["Title"] = "Appointments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row mb-3">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <h1>Appointments</h1>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus"></i> Create Appointment
                </a>
            </div>
        </div>
    </div>

    @if (TempData["Warning"] != null)
    {
        <div class="alert alert-warning">
            @TempData["Warning"]
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <div class="row">
        <div class="col">
            @{
                var sortedAppointments = Model.Appointments
                .Where(a => a.StartTime >= DateTime.Today)
                .OrderByDescending(a => a.StartTime)
                .ToList();

                var pastAppointments = Model.Appointments
                .Where(a => a.StartTime < DateTime.Today)
                .OrderBy(a => a.EndTime)
                .ToList();
            }

            @if (!sortedAppointments.Any() && !pastAppointments.Any())
            {
                <div class="alert alert-info">
                    No appointments scheduled. Click the Create button to add a new appointment.
                </div>
            }
            else
            {
                <div class="card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="mb-0">Upcoming Appointments</h5>
                    </div>
                    <div class="list-group list-group-flush">
                        @foreach (var appointment in sortedAppointments)
                        {
                            <a href="@Url.Action("Edit", new { id = appointment.Id })" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">@appointment.Name</h5>
                                    <small>
                                        @if (appointment.StartTime.Date == DateTime.Today)
                                        {
                                            <span class="badge bg-warning text-dark">Today</span>
                                        }
                                        else if (appointment.StartTime.Date == DateTime.Today.AddDays(1))
                                        {
                                            <span class="badge bg-info">Tomorrow</span>
                                        }
                                    </small>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <p class="mb-1">
                                            <i class="bi bi-geo-alt"></i> @appointment.Location
                                        </p>
                                        <small>
                                            <i class="bi bi-clock"></i> @appointment.StartTime.ToString("MMM dd, yyyy h:mm tt") - @appointment.EndTime.ToString("h:mm tt")
                                        </small>
                                    </div>
                                    <div>
                                        @if (appointment.IsGroupMeeting)
                                        {
                                            <span class="badge bg-success">Group Meeting</span>
                                        }
                                    </div>
                                </div>
                            </a>
                        }
                    </div>
                </div>

                @if (pastAppointments.Any())
                {
                    <div class="card">
                        <div class="card-header bg-white d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Past Appointments</h5>
                            <button class="btn btn-sm btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#pastAppointments" aria-expanded="false">
                                Show/Hide
                            </button>
                        </div>
                        <div class="collapse" id="pastAppointments">
                            <div class="list-group list-group-flush">
                                @foreach (var appointment in pastAppointments)
                                {
                                    <a href="@Url.Action("Edit", new { id = appointment.Id })" class="list-group-item list-group-item-action text-muted">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mb-1">@appointment.Name</h5>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <p class="mb-1">
                                                    <i class="bi bi-geo-alt"></i> @appointment.Location
                                                </p>
                                                <small>
                                                    <i class="bi bi-clock"></i> @appointment.StartTime.ToString("MMM dd, yyyy h:mm tt") - @appointment.EndTime.ToString("h:mm tt")
                                                </small>
                                            </div>
                                            <div>
                                                @if (appointment.IsGroupMeeting)
                                                {
                                                    <span class="badge bg-success">Group Meeting</span>
                                                }
                                            </div>
                                        </div>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        .list-group-item:hover {
            background-color: #f8f9fa;
        }

        .badge {
            font-weight: 500;
        }
    </style>
}
